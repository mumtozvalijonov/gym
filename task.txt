1) Создать class Gym: _address, _name, _employees, _customers
2) Создать class Person: _full_name, _age, _gender(использовать enum)
3) От Person наследовать два класса:
    - Customer: _remaining_visits, _total_visits
    - Employee: _position(enum {instructor, administrator, lawyer, accountant})
4) У Gym определить метод add_employee, который принимает объект класса employee и добавляет его в список 
    _employees
5) У Gym определить метод add_customer, который принимает объект класса Customer и добавляет его в список 
    _customers
6) У Gym определить метод export_employees_info, который принимает название файла csv и сохраняет туда
    список работников со всеми их деталями.
7) У Gym определить метод export_customers_info, который принимает название файла csv и сохраняет туда
    список клиентов со всеми их деталями.

8) У Customer определить метод add_visits, который принимает сумму денег amount, 
    добавляет количество посещений которое можно получить на эту сумму и возвращает сдачу.
    Сумма одного посещения 3.9$. Если суммы не хватает даже на одно посещение - выдает сообщение предупреждения.
9) У Customer определить метод visit_gym(), 
    который снижает _remaining_visits на 1 и увеличивает _total_visits на 1
    Если оставшихся посещений было 0, то raise Exception.


Тест:
1. Создать объект класса Gym
2. Добавить администратора
3. Добавить 2 инструкторов
4. Добавить юриста и бухгалтера
5. Экспортировать данные о работниках в staff.csv
6. Добавить клиента
7. Купить посещений на сумму 1$. Убедиться, что выдается сообщение предупреждения.
    Купить посещений на сумму 100$ и вывести в консоль сумму сдачи
8. Провести 3 посещения
9. Добавить клиента и купить посещений на 5$
10. Провести 2 посещения. Убедиться, что во 2 случае мы получаем сообщение ошибки
11. Экспортировать данные о клиентах в customers.csv